version: 1.0
  
{{{ $libs := sliceOf "reddit" "stackexchange" }}}
{{{ $packages := sliceOf "./..." | yaml }}}
imports:
  - ./docs/common.yaml

plugins:
  - go://./docs/actions

vars:
  app_version: '1.0.0'
  build_dir: '{{PROJECT}}/build'
  lib_dir: '{{build_dir}}/lib'
  server_dir: './server'
  watcher_addr: 'localhost:4800'

mixins:
  rebuild:
    - task: build
    - action: 'live-reload:trigger'
      params:
        address: '{{watcher_addr}}'
    - task: start

tasks:
  build:
    - task: clean
    - task: copy-assets
    - task: build-libs
    - description: build server
      action: build
      params:
        source: '{{server_dir}}'
        outputPath: '{{build_dir}}/server'
        variables:
          'main.version': '{{app_version}}'
          'main.commit': '{% git log --format=%H -n 1 %}'

  build-libs:
    {{{ range $libs }}}
    - mixin: build-lib
      vars:
        name: {{{.}}}
    {{{ end }}}

  cover:
    - action: cover
      params:
        threshold: 40
        reportCoverage: true
        packages: 
          {{{ $packages }}}
        
  watch:
    - action: live-reload:start-server
      async: true
      params:
        address: '{{watcher_addr}}'
        timeout: 1500
    - action: watch
      params:
        path: './server/...'
        run:
          mixin: rebuild

  copy-assets:
    - if: '[ ! -d {{build_dir}} ]'
      description: 'create build directory'
      action: shell
      params:
        command: 'mkdir {{build_dir}}'
    - description: 'copy config file'
      action: shell
      params:
        command: 'cp {{server_dir}}/config.json {{build_dir}}/config.json'
    - description: 'copy assets'
      action: shell
      params:
        command: 'cp -rf {{server_dir}}/public {{build_dir}}'

  start:
    - if: '[ -f {{build_dir}}/server ]'
      action: shell
      params:
        command: '{{build_dir}}/server'
        workDir: '{{build_dir}}'
  clean:
    - if: '[ -d {{ build_dir }} ]'
      description: 'clean build directory'
      action: shell
      params:
        command: 'rm -rf {{build_dir}}'
